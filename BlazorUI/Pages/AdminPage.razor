@namespace BlazorUI
@page "/AdminPage"
@inherits LzComponentBasePassViewModel<ISessionViewModel>
@inject ISessionsViewModel SessionsViewModel
<h3>AdminPage</h3>
@if(isBusy) {
    <Busy/>
    <p>Busy</p>
}
else {
    <MudSelect 
    @bind-Value="_store">
        @foreach (var store in _stores)
        {
            <MudSelectItem Value="@store">@store</MudSelectItem>
        }
    </MudSelect>
    <MudNumericField @bind-Value="numPets" Label="Standard" Variant="Variant.Text" Min="0" Max="20" />
    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="OnSeedDatabase">Seed Database</MudButton>
    <p>@seedDbStatus</p>
}

@code {
    private string seedDbStatus = string.Empty;
    private string busyStatus = string.Empty;
    private bool isBusy = false;
    private string _store = "Uptown";
    private string[] _stores = { "Uptown", "Downtown" };
    private int numPets = 10;
    private string storePrefix = "lzm-mp-";


    protected override async Task OnInitializedAsync()
    {
        ViewModel = SessionsViewModel.SessionViewModel;

        await base.OnInitializedAsync();
    }

    private async Task OnSeedDatabase()
    {
        
        try
        {
            isBusy = true;
            busyStatus = "Seeding Database";
            await ViewModel!.Store.SeedPetsAsync( storePrefix + _store.ToLower(), numPets);
            seedDbStatus = "Seed Database Succeeded";
        } catch (Exception ex)
        {
            seedDbStatus = $"Seed Database Error: {ex.Message}";
        }
        finally {
            isBusy = false;
        }
    }
}
